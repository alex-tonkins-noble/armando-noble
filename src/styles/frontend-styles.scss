// Please use ./styles.scss to add and update all styling.
@use './styles';

// // Frontend Specific Styles
@use './abstracts/variables' as *;
@use './abstracts/mixins/breakpoints' as *;
@use './abstracts/mixins/root-variables' as rv;
@use './abstracts/mixins/structure/containers' as containers;

// Apply container sizes to frontend - more specifity needed here in comparision to editor
:root {
    body {
        @include rv.change-global-content-size();
    }
}

// Use global container styles for all blocks except those with any specific alignments.
.site-main {
    .entry-content {
        > :not(
            .alignleft,
            .alignright,
            .alignfull,
            .alignwide,
            ul,
            ol
        ) {
            @include containers.container-base-styles;
            max-width: var(--wp--style--global--content-size);
        }

        // Now add the container widths onto immediate children of alignfull parent elements
        > .alignfull {
            > * {
                @include containers.container-base-styles;
                max-width: var(--wp--style--global--content-size);
            }
        }

        // Remove the padding width from contained elements with a background - we don't want background colours to spill outside of their containers.
        > :not(.alignfull) {
            &.has-background {
                @include rv.change-elements-with-backgrounds-content-size();
                
                // Fullwidth parent elements that have a background colour are already contained, so lets force the nested elements max-width to be 100%
                > * {
                    max-width: 100%;
                }
            }
        }
    }
}