@use "../../variables" as *;
@use "../../mixins/breakpoints" as *;
@use "sass:math";

@mixin make-col-ready() {
	flex-shrink: 0;
	width: 100%;
	max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid
	padding-right: calc($container_padding); // stylelint-disable-line function-disallowed-list
	padding-left: calc($container_padding); // stylelint-disable-line function-disallowed-list
}

@mixin make-col($size: false, $columns: $grid_columns) {
	@if $size {
		flex: 0 0 auto;
		max-width: percentage(math.div($size, $columns));
	} @else {
		flex: 1 1 0;
		max-width: 100%;
	}
}

@mixin make-grid-columns($columns: $grid_columns, $gutter: $container_padding, $breakpoints: $grid-breakpoints) {
	@each $breakpoint in map-keys($breakpoints) {
		$infix: breakpoint-infix($breakpoint, $breakpoints);

		@include media-breakpoint-up($breakpoint, $breakpoints) {
			// Provide basic `.col-{bp}` classes for equal-width flexbox columns
			// .col#{$infix} {
			// 	flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
			// }

			@if $columns > 0 {
				@for $i from 1 through $columns {
					.col#{$infix}-#{$i} {
						@include make-col($i, $columns);
					}
				}
			}
		}
	}
}